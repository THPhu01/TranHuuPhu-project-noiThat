# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  test:
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.1.13
      - image: mysql:8.0
        environment:
          MYSQL_DATABASE: poly_db
          MYSQL_USER: nghiatran
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: root

    steps:
      - checkout
      - run: cp .env.testing.example .env.testing
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt-get install -y nodejs

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
            # "composer.json" can be used if "composer.json"
            # is not committed to the repository.
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache
      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: php artisan key:generate --env=testing
      - run:
          name: Check convention PHP
          command: php artisan phpcs
      - run: php artisan migrate --seed --env=testing
      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # this example uses codecept but you're not limited to it
      - run:
          name: Check PhpUnit
          command: ./vendor/bin/phpunit

workflows:
  version: 2
  workflow:
    jobs:
      - test
